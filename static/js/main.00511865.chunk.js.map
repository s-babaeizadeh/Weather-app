{"version":3,"sources":["responsive/Device.js","components/SearchCity.js","components/SmallLabel.js","components/Text.js","components/ForecastHour.js","components/ResultFadeIn.js","components/BigLabel.js","components/MediumLabel.js","components/Result.js","components/NotFound.js","App.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SearchBar","styled","form","showResult","SearchInput","input","SearchIcon","span","SearchCity","submit","value","change","onSubmit","type","placeholder","onChange","style","border","background","outline","icon","faSearch","SmallLabel","h4","color","weight","fontSize","align","firstToUpperCase","Text","ForecastWrapper","div","WeatherIcon","img","ForecastHour","props","temp","month","day","hour","iconUrl","src","ResultFadeIn","keyframes","BigLabel","h2","h3","Results","LocationWrapper","CurrentWeatherWrapper","TemperatureWrapper","Temperature","WeatherDetailsWrapper","WeatherDetail","Forecast","Result","weather","city","country","date","description","main","humidity","sunset","sunrise","wind","highestTemp","lowestTemp","forecasts","forecast","map","item","key","dt","Math","floor","dt_txt","slice","weatherIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","className","NotFoundWrapper","NotfoundIcon","NotFoundText","NotFound","faFrown","AppTitle","h1","showLabel","secondary","WeatherWrapper","App","state","weatherInfo","error","handleInputChange","e","setState","target","handleSearchCity","preventDefault","APIkey","process","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","currentDate","Date","getDay","getDate","getMonth","sys","toLocaleTimeString","name","temp_max","temp_min","clouds","speed","list","catch","console","log","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAAMA,EAEK,QAFLA,EAGK,QAHLA,EAII,QAJJA,EAKI,SALJA,EAMK,SANLA,EAOK,SAcIC,EAXA,CACbC,QAAQ,eAAD,OAVE,QAUF,KACPC,QAAQ,eAAD,OAAiBH,EAAjB,KACPI,QAAQ,eAAD,OAAiBJ,EAAjB,KACPK,OAAO,eAAD,OAAiBL,EAAjB,KACNM,OAAO,eAAD,OAAiBN,EAAjB,KACNO,QAAQ,eAAD,OAAiBP,EAAjB,KACPQ,QAAQ,eAAD,OAAiBR,EAAjB,KACPS,SAAS,eAAD,OAAiBT,EAAjB,M,kwCCXV,IAAMU,EAAYC,IAAOC,KAAV,KACN,qBAAGC,WAA+B,KAAO,QAKvCZ,EAAOM,QAGPN,EAAOO,SAKZM,EAAcH,IAAOI,MAAV,IAeNd,EAAOI,OAGPJ,EAAOK,QAMZU,EAAaL,IAAOM,KAAV,IAULhB,EAAOI,OAKPJ,EAAOK,QAmCHY,EA5BI,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,OAAQR,EAAiB,EAAjBA,WAC3C,OACE,oCACE,kBAACH,EAAD,CAAWG,WAAYA,EAAYS,SAAUH,GAC3C,kBAACL,EAAD,CACAS,KAAK,SACLH,MAAOA,EACNI,YAAY,aACXC,SAAUJ,IAEZ,kBAACL,EAAD,KAEE,4BAAQO,KAAK,SAASG,MAAO,CAAEC,OAAO,OAAQC,WAAW,cAAeC,QAAS,SAC/E,kBAAC,IAAD,CAAiBC,KAAMC,W,oUC7EnC,IAyBeC,EAzBIrB,IAAOsB,GAAV,KACL,qBAAGC,OAAqB,aAElB,qBAAGC,QAAuB,SAC5B,qBAAGC,UAA2B,UAC7B,qBAAGC,OAAqB,UAEpC,qBAAGC,kBACa,kEAMTrC,EAAOI,QACD,qBAAG+B,UAA2B,SAEpCnC,EAAOK,QACD,qBAAG8B,UAA2B,SAEpCnC,EAAOM,SACD,qBAAG6B,UAA2B,U,wRCrB/C,IAwBeG,EAxBF5B,IAAOM,KAAV,KACC,qBAAGiB,OAAqB,aAEpB,qBAAGE,UAA2B,UAC7B,qBAAGC,OAAqB,UAEpC,qBAAGC,kBACa,kEAMTrC,EAAOI,QACD,qBAAG+B,UAA2B,SAEpCnC,EAAOK,QACD,qBAAG8B,UAA2B,SAEpCnC,EAAOM,SACD,qBAAG6B,UAA2B,U,wkBChB/C,IAAMI,EAAkB7B,IAAO8B,IAAV,IAaVxC,EAAOI,OAGPJ,EAAOK,OAGPL,EAAOM,SAKZmC,EAAc/B,IAAOgC,IAAV,KAiCFC,EA1BM,SAACC,GAAW,IACvBC,EAAiCD,EAAjCC,KAAMC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,IAAKC,EAAeJ,EAAfI,KAAMnB,EAASe,EAATf,KAC1BoB,EAAO,2CAAuCpB,EAAvC,QAEb,OACE,kBAACU,EAAD,KACE,kBAAC,EAAD,CAAMH,MAAM,UACTU,EADH,IACWC,GAEX,kBAAC,EAAD,CAAMX,MAAM,UAAUY,EAAtB,OACA,kBAACP,EAAD,CAAaS,IAAKD,IAClB,kBAAC,EAAD,CAAYb,MAAM,SAASF,OAAO,OAC/BW,EADH,U,oJC/CN,IAQeM,EARMC,YAAH,K,+TCClB,IAyBeC,EAzBE3C,IAAO4C,GAAV,KACH,qBAAGrB,OAAqB,aAElB,qBAAGC,QAAuB,SAC5B,qBAAGC,UAA2B,UAC7B,qBAAGC,OAAqB,UAEpC,qBAAGC,kBACa,kEAMTrC,EAAOI,QACD,qBAAG+B,UAA2B,SAEpCnC,EAAOK,QACD,qBAAG8B,UAA2B,SAEpCnC,EAAOM,SACD,qBAAG6B,UAA2B,U,8TCrB3BzB,IAAO6C,GAAV,KACN,qBAAGtB,OAAqB,aAElB,qBAAGC,QAAuB,SAC5B,qBAAGC,UAA2B,UAC7B,qBAAGC,OAAqB,UAEpC,qBAAGC,kBACa,kEAMTrC,EAAOI,QACD,qBAAG+B,UAA2B,SAEpCnC,EAAOK,QACD,qBAAG8B,UAA2B,SAEpCnC,EAAOM,SACD,qBAAG6B,UAA2B,U,i0ECF/C,IAAMqB,GAAU9C,IAAO8B,IAAV,IASEW,GAGTM,GAAkB/C,IAAO8B,IAAV,KAIfkB,GAAwBhD,IAAO8B,IAAV,IAQhBxC,EAAOG,QAIPH,EAAOI,QAMZqC,GAAc/B,IAAO8B,IAAV,IAMNxC,EAAOI,OAIPJ,EAAOK,OAGPL,EAAOM,SAKZqD,GAAqBjD,IAAO8B,IAAV,KAElBoB,GAAclD,IAAO6C,GAAV,IAKNvD,EAAOI,OAGPJ,EAAOK,OAGPL,EAAOM,SAKZuD,GAAwBnD,IAAO8B,IAAV,IAShBxC,EAAOG,SAKZ2D,GAAgBpD,IAAO8B,IAAV,IAGRxC,EAAOK,QAKZkC,GAAkB7B,IAAO8B,IAAV,KAMfuB,GAAWrD,IAAO8B,IAAV,IASHxC,EAAOK,QA0IH2D,GArIA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGdC,EAaED,EAbFC,KACAC,EAYEF,EAZFE,QACAC,EAWEH,EAXFG,KACAC,EAUEJ,EAVFI,YACAC,EASEL,EATFK,KACAzB,EAQEoB,EARFpB,KAGA0B,GAKEN,EAPFO,OAOEP,EANFQ,QAMER,EALFM,UACAG,EAIET,EAJFS,KACAC,EAGEV,EAHFU,YACAC,EAEEX,EAFFW,WAIIC,EAFFZ,EADFa,SAGyBC,KAAI,SAACC,GAAD,OAC7B,kBAAC,EAAD,CACEC,IAAKD,EAAKE,GACVrC,KAAMsC,KAAKC,MAAuB,EAAjBJ,EAAKV,KAAKzB,MAAY,EACvChB,KAAMmD,EAAKf,QAAQ,GAAGpC,KACtBiB,MAAOkC,EAAKK,OAAOC,MAAM,EAAG,GAC5BvC,IAAKiC,EAAKK,OAAOC,MAAM,EAAG,IAC1BtC,KAAkC,EAA5BgC,EAAKK,OAAOC,MAAM,GAAI,SAI5BC,EAAc,KAkBlB,OAfEA,EADW,iBAATjB,EACY,kBAAC,IAAD,CAAiBzC,KAAM2D,MACnB,YAATlB,EACK,kBAAC,IAAD,CAAiBzC,KAAM4D,MACnB,SAATnB,EACK,kBAAC,IAAD,CAAiBzC,KAAM6D,MACnB,SAATpB,EACK,kBAAC,IAAD,CAAiBzC,KAAM8D,MACnB,UAATrB,EACK,kBAAC,IAAD,CAAiBzC,KAAM+D,MACnB,WAATtB,EACK,kBAAC,IAAD,CAAiBzC,KAAMgE,MAEvB,kBAAC,IAAD,CAAiBhE,KAAMiE,MAIrC,kBAACtC,GAAD,KAEE,kBAACE,GAAD,KACE,kBAAC,GAAD,KACE,6BACG6B,EACD,kBAAC,EAAD,CAAYrD,OAAO,MAAMG,kBAAgB,GACtCgC,KAIP,kBAACV,GAAD,KACE,kBAACC,GAAD,KAAcuB,KAAKC,MAAMvC,GAAzB,SAKF,kBAACY,GAAD,KACE,kBAAC,EAAD,KACGS,EADH,KACWC,GAEX,kBAAC,EAAD,CAAYjC,OAAO,OAAOkC,IAK5B,kBAACP,GAAD,CAAuBkC,UAAU,QAC/B,kBAACjC,GAAD,KACE,kBAAC,EAAD,CAAM1B,MAAM,UAAZ,SACA,kBAAC,EAAD,CAAYA,MAAM,SAASF,OAAO,OAC/BiD,KAAKC,MAAMT,GADd,SAIF,kBAACb,GAAD,KACE,kBAAC,EAAD,CAAM1B,MAAM,UAAZ,SACA,kBAAC,EAAD,CAAYA,MAAM,SAASF,OAAO,OAC/BiD,KAAKC,MAAMR,GADd,UAOJ,kBAACf,GAAD,CAAuBkC,UAAU,QAC/B,kBAACjC,GAAD,KACE,kBAAC,EAAD,CAAM1B,MAAM,UAAZ,SACA,kBAAC,EAAD,CAAYA,MAAM,SAASF,OAAO,OAC/BwC,EADH,QAIF,kBAACZ,GAAD,KACE,kBAAC,EAAD,CAAM1B,MAAM,UAAZ,SACA,kBAAC,EAAD,CAAYA,MAAM,SAASF,OAAO,OAC/BqC,EADH,QAQN,kBAAC,GAAD,KAEE,kBAACR,GAAD,KAAWc,M,gsBC7OnB,IAAMmB,GAAkBtF,IAAO8B,IAAV,KAcNW,GAGT8C,GAAevF,IAAOM,KAAV,MAQZkF,GAAexF,IAAOM,KAAV,MAgBHmF,GAXE,WACf,OACE,kBAACH,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,IAAD,CAAiBpE,KAAMuE,OAEzB,kBAACF,GAAD,oD,idCnCN,IAAMG,GAAW3F,IAAO4F,GAAV,MAUD,qBAAGC,UAA6B,EAAI,KAE7C,qBAAGC,WACM,8LAUAxG,EAAOI,OAVP,yDAaAJ,EAAOK,OAbP,yDAgBAL,EAAOM,QAhBP,yDAmBAN,EAAOO,QAnBP,kDAyBT,qBAAGK,YACO,mEAQR6F,GAAiB/F,IAAO8B,IAAV,MAoHLkE,G,4MA3GbC,MAAQ,CACNxF,MAAO,GACPyF,YAAa,KACbC,OAAO,G,EAITC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZ7F,MAAO4F,EAAEE,OAAO9F,S,EAIpB+F,iBAAmB,SAACH,GAClBA,EAAEI,iBADsB,IAEhBhG,EAAU,EAAKwF,MAAfxF,MACFiG,EAASC,mCAETpD,EAAO,4DAAwD9C,EAAxD,kBAAuEiG,EAAvE,iBACPtC,EAAQ,6DAAyD3D,EAAzD,kBAAwEiG,EAAxE,iBAEdE,QAAQC,IAAI,CAACC,MAAMvD,GAAUuD,MAAM1C,KAChC2C,MAAK,YAAmB,IAAD,mBAAhBC,EAAgB,KAAVC,EAAU,KACtB,GAAID,EAAKE,IAAMD,EAAKC,GAClB,OAAON,QAAQC,IAAI,CAACG,EAAKG,OAAQF,EAAKE,SAExC,MAAMC,MAAMJ,EAAKK,WAAYJ,EAAKI,eAEnCN,MAAK,YAAqB,IAAD,mBAAlBO,EAAkB,KAAXC,EAAW,KAgBlBC,EAAc,IAAIC,KAClB/D,EAAI,UAFG,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE3D8D,EAAYE,UAAvB,YAAoCF,EAAYG,UAAhD,YAhBK,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,YACA,YAKOH,EAAYI,aAEf9D,EAAS,IAAI2D,KAAwB,IAAnBH,EAAMO,IAAI/D,QAAegE,qBAAqBlD,MAAM,EAAG,GACzEb,EAAU,IAAI0D,KAAyB,IAApBH,EAAMO,IAAI9D,SAAgB+D,qBAAqBlD,MAAM,EAAG,GAE3EsB,EAAc,CAClB1C,KAAM8D,EAAMS,KACZtE,QAAS6D,EAAMO,IAAIpE,QACnBC,OACAC,YAAa2D,EAAM/D,QAAQ,GAAGI,YAC9BC,KAAM0D,EAAM/D,QAAQ,GAAGK,KACvBzB,KAAMmF,EAAM1D,KAAKzB,KACjB8B,YAAaqD,EAAM1D,KAAKoE,SACxB9D,WAAYoD,EAAM1D,KAAKqE,SACvBlE,UACAD,SACAoE,OAAQZ,EAAMY,OAAOrB,IACrBhD,SAAUyD,EAAM1D,KAAKC,SACrBG,KAAMsD,EAAMtD,KAAKmE,MACjB/D,SAAUmD,EAAMa,MAElB,EAAK9B,SAAS,CACZJ,cACAC,OAAO,EACP1F,MAAO,QAIV4H,OAAM,SAAClC,GACNmC,QAAQC,IAAIpC,GAEZ,EAAKG,SAAS,CACZH,OAAO,EACPD,YAAa,W,uDAKX,IAAD,EAC+BsC,KAAKvC,MAAnCxF,EADD,EACCA,MAAOyF,EADR,EACQA,YAAaC,EADrB,EACqBA,MAC5B,OACE,oCACE,kBAACR,GAAD,CAAUE,WAAYK,GAAeC,KAAU,GAA/C,eACA,kBAACJ,GAAD,KACE,kBAACJ,GAAD,CAAUG,WAAS,EAAC5F,YAAagG,GAAeC,KAAU,GAA1D,eAGA,kBAAC,EAAD,CACE1F,MAAOA,EACPP,YAAagG,GAAeC,KAAU,EACtCzF,OAAQ8H,KAAKpC,kBACb5F,OAAQgI,KAAKhC,mBAEdN,GAAe,kBAAC,GAAD,CAAQ3C,QAAS2C,IAChCC,GAAS,kBAAC,GAAD,CAAUA,MAAOA,U,GArGnBsC,IAAMC,WCxDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.00511865.chunk.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '525px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nconst device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n\nexport default device;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport device from '../responsive/Device';\n\nconst SearchBar = styled.form`\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\n  position: relative;\n  margin: 0 auto;\n  max-width: 500px;\n  transition: 0.8s 0.5s;\n  @media ${device.laptopL} {\n    max-width: 600px;\n  }\n  @media ${device.desktop} {\n    max-width: 700px;\n  }\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  border: none;\n  background-color: #ffffff;\n  font-size: 16px;\n  padding: 10px 15px 10px 40px;\n  color: #c5c5c5;\n  transition: 0.2s;\n  border-radius: 20px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  &:focus {\n    color: #191919;\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n    outline: none;\n  }\n  @media ${device.tablet} {\n    font-size: 18px;\n  }\n  @media ${device.laptop} {\n    padding: 15px 20px 15px 45px;\n    border-radius: 30px;\n  }\n`;\n\nconst SearchIcon = styled.span`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 22px;\n  transform: translate(-50%, -50%);\n  height: 14px;\n  width: 14px;\n  font-size: 14px;\n  color: #c5c5c5;\n  @media ${device.tablet} {\n    height: 15px;\n    width: 15px;\n    font-size: 15px;\n  }\n  @media ${device.laptop} {\n    height: 16px;\n    width: 16px;\n    font-size: 16px;\n  }\n`;\n\nconst SearchCity = ({ submit, value, change, showResult }) => {\n  return (\n    <>\n      <SearchBar showResult={showResult} onSubmit={submit}>\n        <SearchInput \n        type=\"search\" \n        value={value}\n         placeholder=\"Enter city\"\n          onChange={change} />\n        \n        <SearchIcon>\n          {/* <FontAwesomeIcon icon={faSearch} /> */}\n          <button type=\"submit\" style={{ border:\"none\", background:\"transparent\", outline: \"none\" }}>\n            <FontAwesomeIcon icon={faSearch}/>\n          </button>\n        </SearchIcon>\n      </SearchBar>\n    </>\n  );\n};\n\nSearchCity.propTypes = {\n  submit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  showResult: PropTypes.bool.isRequired,\n};\n\nexport default SearchCity;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst SmallLabel = styled.h4`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '15px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '20px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '23px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '26px'};\n  }\n`;\n\nexport default SmallLabel;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst Text = styled.span`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-size: ${({ fontSize }) => fontSize || '12px'};\n  text-align: ${({ align }) => align || 'left'};\n\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '15px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '17px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '19px'};\n  }\n`;\n\nexport default Text;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\nimport device from '../responsive/Device';\n\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 90px;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.2);\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\n\nconst WeatherIcon = styled.img`\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: 0 auto;\n`;\n\nconst ForecastHour = (props) => {\n  const { temp, month, day, hour, icon } = props;\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n\n  return (\n    <ForecastWrapper>\n      <Text align=\"center\">\n        {month}.{day}\n      </Text>\n      <Text align=\"center\">{hour}:00</Text>\n      <WeatherIcon src={iconUrl} />\n      <SmallLabel align=\"center\" weight=\"400\">\n        {temp}&#176;\n      </SmallLabel>\n    </ForecastWrapper>\n  );\n};\n\nForecastHour.propTypes = {\n  temp: PropTypes.number.isRequired,\n  month: PropTypes.string.isRequired,\n  day: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default ForecastHour;\n","import { keyframes } from 'styled-components';\n\nconst ResultFadeIn = keyframes`\n  to {\n    opacity: 1;\n        visibility: visible;\n        top: 0;\n  }\n`;\n\nexport default ResultFadeIn;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst BigLabel = styled.h2`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '15px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '37px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '43px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '52px'};\n  } \n`;\n\nexport default BigLabel;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst MediumLabel = styled.h3`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '20px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '23px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '26px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '29px'};\n  }\n`;\n\nexport default MediumLabel;\n","import React from 'react';\nimport './Result.sass';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n} from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport device from '../responsive/Device';\nimport ForecastHour from './ForecastHour';\nimport ResultFadeIn from './ResultFadeIn';\nimport BigLabel from './BigLabel';\nimport MediumLabel from './MediumLabel';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 30px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst LocationWrapper = styled.div`\n  flex-basis: 100%;\n`;\n\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: 1fr 1fr 1fr;\n  margin: 10px 0;\n  grid-gap: 10px;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n    padding-right: 10px;\n  }\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr 1fr;\n    padding-right: 20px;\n  }\n`;\n\nconst WeatherIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 50px;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 100px;\n    justify-content: flex-end;\n  }\n  @media ${device.laptop} {\n    font-size: 120px;\n  }\n  @media ${device.laptopL} {\n    font-size: 140px;\n  }\n`;\n\nconst TemperatureWrapper = styled.div``;\n\nconst Temperature = styled.h3`\n  display: block;\n  font-size: 70px;\n  font-weight: 600;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 80px;\n  }\n  @media ${device.laptop} {\n    font-size: 90px;\n  }\n  @media ${device.laptopL} {\n    font-size: 110px;\n  }\n`;\n\nconst WeatherDetailsWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 5px 0;\n  margin: 10px 0;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  align-self: flex-start;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n  }\n`;\n\nconst WeatherDetail = styled.div`\n  flex-basis: calc(100% / 3);\n  padding: 5px;\n  @media ${device.laptop} {\n    padding: 20px 10px;\n  }\n`;\n\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 10px 0;\n  overflow: hidden;\n`;\n\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  // console.log(weather);\n  const {\n    city,\n    country,\n    date,\n    description,\n    main,\n    temp,\n    sunset,\n    sunrise,\n    humidity,\n    wind,\n    highestTemp,\n    lowestTemp,\n    forecast,\n  } = weather;\n\n  const forecasts = forecast.map((item) => (\n    <ForecastHour\n      key={item.dt}\n      temp={Math.floor(item.main.temp * 1) / 1}\n      icon={item.weather[0].icon}\n      month={item.dt_txt.slice(5, 7)}\n      day={item.dt_txt.slice(8, 10)}\n      hour={item.dt_txt.slice(11, 13) * 1}\n    />\n  ));\n\n  let weatherIcon = null;\n\n  if (main === 'Thunderstorm') {\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n  } else if (main === 'Drizzle') {\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n  } else if (main === 'Rain') {\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (main === 'Snow') {\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (main === 'Clear') {\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\n  } else if (main === 'Clouds') {\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n  } else {\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n  }\n\n  return (\n    <Results>\n      {/* weather icon and description */}\n      <CurrentWeatherWrapper>\n        <WeatherIcon>\n          <div>\n            {weatherIcon}\n            <SmallLabel weight=\"400\" firstToUpperCase>\n              {description}\n            </SmallLabel>\n          </div>\n        </WeatherIcon>\n        <TemperatureWrapper>\n          <Temperature>{Math.floor(temp)}&#176;</Temperature>\n        </TemperatureWrapper>\n        {/* end of weather icon and description */}\n\n        {/* location */}\n        <LocationWrapper>\n          <BigLabel>\n            {city}, {country}\n          </BigLabel>\n          <SmallLabel weight=\"400\">{date}</SmallLabel>\n        </LocationWrapper>\n        {/* end of location  */}\n\n        {/* wthather details */}\n        <WeatherDetailsWrapper className=\"card\">\n          <WeatherDetail>\n            <Text align=\"center\">High:</Text>\n            <SmallLabel align=\"center\" weight=\"400\">\n              {Math.floor(highestTemp)}&#176;\n            </SmallLabel>\n          </WeatherDetail>\n          <WeatherDetail>\n            <Text align=\"center\">Lowe:</Text>\n            <SmallLabel align=\"center\" weight=\"400\">\n              {Math.floor(lowestTemp)}&#176;\n            </SmallLabel>\n          </WeatherDetail>\n        </WeatherDetailsWrapper>\n        {/* end of weather details */}\n\n        <WeatherDetailsWrapper className=\"card\">\n          <WeatherDetail>\n            <Text align=\"center\">Wind:</Text>\n            <SmallLabel align=\"center\" weight=\"400\">\n              {wind}mph\n            </SmallLabel>\n          </WeatherDetail>\n          <WeatherDetail>\n            <Text align=\"center\">Rain:</Text>\n            <SmallLabel align=\"center\" weight=\"400\">\n              {humidity}%\n            </SmallLabel>\n          </WeatherDetail>\n        </WeatherDetailsWrapper>\n      </CurrentWeatherWrapper>\n\n      {/* forecast */}\n      <ForecastWrapper>\n        {/* <MediumLabel weight=\"400\">Forecast</MediumLabel> */}\n        <Forecast>{forecasts}</Forecast>\n      </ForecastWrapper>\n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    sunrise: PropTypes.string,\n    sunset: PropTypes.string,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    highestTemp: PropTypes.number,\n    lowestTemp: PropTypes.number,\n    forecast: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Result;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport ResultFadeIn from './ResultFadeIn';\n\nconst NotFoundWrapper = styled.div`\n  max-width: 600px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 100px auto 0;\n  padding: 20px;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  border-radius: 10px;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.3);\n  border-radius: 10px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst NotfoundIcon = styled.span`\n  display: block;\n  text-align: center;\n  color: #ffffff;\n  font-size: 40px;\n  margin-right: 10px;\n`;\n\nconst NotFoundText = styled.span`\n  color: #ffffff;\n  font-size: 17px;\n`;\n\nconst NotFound = () => {\n  return (\n    <NotFoundWrapper>\n      <NotfoundIcon>\n        <FontAwesomeIcon icon={faFrown} />\n      </NotfoundIcon>\n      <NotFoundText>Sorry, the specified city was not found..</NotFoundText>\n    </NotFoundWrapper>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport styled from 'styled-components';\nimport SearchCity from './components/SearchCity';\nimport device from './responsive/Device';\nimport Result from './components/Result';\nimport NotFound from './components/NotFound';\n\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: 100vh;\n  width: 100%;\n  position: relative;\n`;\n\nclass App extends React.Component {\n  state = {\n    value: '',\n    weatherInfo: null,\n    error: false,\n    // isPressed:false\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  handleSearchCity = (e) => {\n    e.preventDefault();\n    const { value } = this.state;   \n    const APIkey = process.env.REACT_APP_API_KEY;\n\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n\n    Promise.all([fetch(weather), fetch(forecast)])\n      .then(([res1, res2]) => {\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n        }\n        throw Error(res1.statusText, res2.statusText);\n      })\n      .then(([data1, data2]) => {\n        const months = [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'Nocvember',\n          'December',\n        ];\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n          months[currentDate.getMonth()]\n        }`;\n        const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\n        const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\n\n        const weatherInfo = {\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          description: data1.weather[0].description,\n          main: data1.weather[0].main,\n          temp: data1.main.temp,\n          highestTemp: data1.main.temp_max,\n          lowestTemp: data1.main.temp_min,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          wind: data1.wind.speed,\n          forecast: data2.list,\n        };\n        this.setState({\n          weatherInfo,\n          error: false,\n          value: '',\n          // isPressed:true\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        this.setState({\n          error: true,\n          weatherInfo: null,\n        });\n      });\n  };\n\n  render() {\n    const { value, weatherInfo, error } = this.state;\n    return (\n      <>\n        <AppTitle showLabel={(weatherInfo || error) && true}>Weather app</AppTitle>\n        <WeatherWrapper>\n          <AppTitle secondary showResult={(weatherInfo || error) && true}>\n            Weather app\n          </AppTitle>\n          <SearchCity \n            value={value}\n            showResult={(weatherInfo || error) && true}\n            change={this.handleInputChange}\n            submit={this.handleSearchCity}\n          />\n          {weatherInfo && <Result weather={weatherInfo} />}\n          {error && <NotFound error={error} />}\n        </WeatherWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}